import * as constants from './src/change_detection/constants';
import * as reflective_provider from './src/di/reflective_provider';
import * as lifecycle_hooks from './src/metadata/lifecycle_hooks';
import * as reflector_reader from './src/reflection/reflector_reader';
import * as component_resolver from './src/linker/component_resolver';
import * as element from './src/linker/element';
import * as view from './src/linker/view';
import * as view_type from './src/linker/view_type';
import * as view_utils from './src/linker/view_utils';
import * as metadata_view from './src/metadata/view';
import * as debug_context from './src/linker/debug_context';
import * as change_detection_util from './src/change_detection/change_detection_util';
import * as api from './src/render/api';
import * as template_ref from './src/linker/template_ref';
import * as wtf_init from './src/profile/wtf_init';
import * as reflection_capabilities from './src/reflection/reflection_capabilities';
import * as decorators from './src/util/decorators';

export namespace __core_private__ {
  export var isDefaultChangeDetectionStrategy = constants.isDefaultChangeDetectionStrategy;
  export type ChangeDetectorState = constants.ChangeDetectorState;
  export var ChangeDetectorState = constants.ChangeDetectorState;
  export var CHANGE_DETECTION_STRATEGY_VALUES = constants.CHANGE_DETECTION_STRATEGY_VALUES;
  export var constructDependencies = reflective_provider.constructDependencies;
  export type LifecycleHooks = lifecycle_hooks.LifecycleHooks;
  export var LifecycleHooks = lifecycle_hooks.LifecycleHooks;
  export var LIFECYCLE_HOOKS_VALUES = lifecycle_hooks.LIFECYCLE_HOOKS_VALUES;
  export type ReflectorReader = reflector_reader.ReflectorReader;
  export var ReflectorReader = reflector_reader.ReflectorReader;
  export var ReflectorComponentResolver = component_resolver.ReflectorComponentResolver;
  export type AppElement = element.AppElement;
  export var AppElement = element.AppElement;
  export var AppView = view.AppView;
  export type ViewType = view_type.ViewType;
  export var ViewType = view_type.ViewType;
  export var MAX_INTERPOLATION_VALUES = view_utils.MAX_INTERPOLATION_VALUES;
  export var checkBinding = view_utils.checkBinding;
  export var flattenNestedViewRenderNodes = view_utils.flattenNestedViewRenderNodes;
  export var interpolate = view_utils.interpolate;
  export var ViewUtils = view_utils.ViewUtils;
  export var VIEW_ENCAPSULATION_VALUES = metadata_view.VIEW_ENCAPSULATION_VALUES;
  export var DebugContext = debug_context.DebugContext;
  export var StaticNodeDebugInfo = debug_context.StaticNodeDebugInfo;
  export var devModeEqual = change_detection_util.devModeEqual;
  export var uninitialized = change_detection_util.uninitialized;
  export var ValueUnwrapper = change_detection_util.ValueUnwrapper;
  export type RenderDebugInfo = api.RenderDebugInfo;
  export var RenderDebugInfo = api.RenderDebugInfo;
  export var TemplateRef_ = template_ref.TemplateRef_;
  export var wtfInit = wtf_init.wtfInit;
  export var ReflectionCapabilities = reflection_capabilities.ReflectionCapabilities;
  export var makeDecorator = decorators.makeDecorator;
}
