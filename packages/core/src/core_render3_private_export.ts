/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

// clang-format off
export {
  C as ɵC,
  ComponentDefInternal as ɵComponentDef,
  ComponentType as ɵComponentType,
  CssSelectorList as ɵCssSelectorList,
  DirectiveDefInternal as ɵDirectiveDef,
  DirectiveType as ɵDirectiveType,
  E as ɵE,
  Ee as ɵEe,
  L as ɵL,
  NC as ɵNC,
  NH as ɵNH,
  NM as ɵNM,
  NS as ɵNS,
  NgModuleDef as ɵNgModuleDef,
  NgModuleType as ɵNgModuleType,
  NgOnChangesFeature as ɵNgOnChangesFeature,
  P as ɵP,
  PipeDef as ɵPipeDef,
  Pp as ɵPp,
  PublicFeature as ɵPublicFeature,
  Q as ɵQ,
  RenderFlags as ɵRenderFlags,
  T as ɵT,
  V as ɵV,
  a as ɵa,
  b as ɵb,
  cR as ɵcR,
  cr as ɵcr,
  d as ɵd,
  defineComponent as ɵdefineComponent,
  defineDirective as ɵdefineDirective,
  defineNgModule as ɵdefineNgModule,
  definePipe as ɵdefinePipe,
  detectChanges as ɵdetectChanges,
  directiveInject as ɵdirectiveInject,
  e as ɵe,
  f0 as ɵf0,
  f1 as ɵf1,
  f2 as ɵf2,
  f3 as ɵf3,
  f4 as ɵf4,
  f5 as ɵf5,
  f6 as ɵf6,
  f7 as ɵf7,
  f8 as ɵf8,
  fV as ɵfV,
  i1 as ɵi1,
  i2 as ɵi2,
  i3 as ɵi3,
  i4 as ɵi4,
  i5 as ɵi5,
  i6 as ɵi6,
  i7 as ɵi7,
  i8 as ɵi8,
  iA as ɵiA,
  iEM as ɵiEM,
  iI as ɵiI,
  iIV as ɵiIV,
  iM as ɵiM,
  iV as ɵiV,
  injectAttribute as ɵinjectAttribute,
  injectChangeDetectorRef as ɵinjectChangeDetectorRef,
  injectTemplateRef as ɵinjectTemplateRef,
  injectViewContainerRef as ɵinjectViewContainerRef,
  k as ɵk,
  kn as ɵkn,
  ld as ɵld,
  markDirty as ɵmarkDirty,
  p as ɵp,
  pD as ɵpD,
  pb1 as ɵpb1,
  pb2 as ɵpb2,
  pb3 as ɵpb3,
  pb4 as ɵpb4,
  pbV as ɵpbV,
  qR as ɵqR,
  rS as ɵrS,
  renderComponent as ɵrenderComponent,
  s as ɵs,
  sn as ɵsn,
  st as ɵst,
  t as ɵt,
  v as ɵv,
  whenRendered as ɵwhenRendered} from './render3/index';

export {
  bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml,
  bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle,
  bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript,
  bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl,
  bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl,
  sanitizeHtml as ɵsanitizeHtml,
  sanitizeStyle as ɵsanitizeStyle,
  sanitizeUrl as ɵsanitizeUrl,
  sanitizeResourceUrl as ɵsanitizeResourceUrl,
} from './sanitization/sanitization';
// clang-format on
